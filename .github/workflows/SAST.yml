name: Security Pipeline

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:

jobs:
  build_app:
    name: Build Flask App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t my-vuln-app ./SAST/app

  sonar_scan:
    name: SAST with SonarCloud
    runs-on: ubuntu-latest
    needs: build_app
    steps:
      - uses: actions/checkout@v3

      # Action recommandée (l'ancienne est dépréciée)
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          projectBaseDir: SAST
          # On passe explicitement key/org pour éviter "Project root configuration file: NONE"
          args: >
            -Dsonar.projectKey=Sofl4me_SAST
            -Dsonar.organization=sofl4me
            -Dsonar.sources=app
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"

  dast_zap:
    name: DAST with OWASP ZAP
    runs-on: ubuntu-latest
    needs: build_app
    steps:
      - uses: actions/checkout@v3

      # On démarre l'app pour que ZAP ait une cible atteignable
      - name: Run app container
        run: |
          docker run -d --rm -p 5000:5000 --name vulnapp my-vuln-app
          # petite attente pour que Flask soit up
          for i in {1..20}; do
            curl -fsS http://localhost:5000 && break
            sleep 1
          done

      - name: Run OWASP ZAP baseline scan
        run: |
          mkdir -p reports
          docker run --rm --network host \
            -v ${{ github.workspace }}/reports:/zap/reports \
            owasp/zap2docker-stable zap-baseline.py \
            -t http://localhost:5000 \
            -r /zap/reports/zap_report.html

      - name: Upload ZAP report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: reports/zap_report.html

      - name: Stop app container
        if: always()
        run: docker stop vulnapp || true

  dep_audit:
    name: Dependency Audit (pip-audit)
    runs-on: ubuntu-latest
    needs: build_app
    steps:
      - uses: actions/checkout@v3

      - name: Install pip-audit
        run: pip install pip-audit

      - name: Run pip-audit
        run: pip-audit -r SAST/app/requirements.txt --format=json > pip_audit.json

      - name: Upload audit results
        uses: actions/upload-artifact@v3
        with:
          name: pip-audit-report
          path: pip_audit.json
