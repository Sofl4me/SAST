name: Security Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:

jobs:
  build_app:
    name: Build Flask App
    runs-on: ubuntu-latest
    services:
      app:
        build: ./SAST/app
        ports:
          - 5000:5000
      db:
        image: postgres:12
        env:
          POSTGRES_USER: sonar
          POSTGRES_PASSWORD: sonar
          POSTGRES_DB: sonar
        ports:
          - 5432:5432
      sonarqube:
        image: sonarqube:lts
        env:
          SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
          SONAR_JDBC_USERNAME: sonar
          SONAR_JDBC_PASSWORD: sonar
        ports:
          - 9000:9000
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker Image
        run: docker build -t my-vuln-app ./SAST/app

  sonar_scan:
    name: SAST with SonarQube
    runs-on: ubuntu-latest
    needs: build_app
    steps:
      - uses: actions/checkout@v3
      - name: Run SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: SAST
          args: >
            -Dsonar.projectKey=my-vuln-app
            -Dsonar.sources=app
            -Dsonar.host.url=http://localhost:9000
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  dast_zap:
    name: DAST with OWASP ZAP
    runs-on: ubuntu-latest
    needs: build_app
    steps:
      - uses: actions/checkout@v3
      - name: Run OWASP ZAP baseline scan
        run: |
          mkdir -p reports
          docker run --rm -v ${{ github.workspace }}/reports:/zap/reports \
            owasp/zap2docker-stable zap-baseline.py \
            -t http://host.docker.internal:5000 \
            -r /zap/reports/zap_report.html
      - name: Upload ZAP report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: reports/zap_report.html

  dep_audit:
    name: Dependency Audit (pip-audit)
    runs-on: ubuntu-latest
    needs: build_app
    steps:
      - uses: actions/checkout@v3
      - name: Install pip-audit
        run: pip install pip-audit
      - name: Run pip-audit
        run: pip-audit -r SAST/app/requirements.txt --format=json > pip_audit.json
      - name: Upload audit results
        uses: actions/upload-artifact@v3
        with:
          name: pip-audit-report
          path: pip_audit.json
