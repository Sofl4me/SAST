name: Security Pipeline

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:

jobs:
  build_app:
    name: Build Flask App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build -t my-vuln-app ./SAST/app

  sonar_scan:
    name: SAST with SonarCloud
    runs-on: ubuntu-latest
    needs: build_app
    steps:
      - uses: actions/checkout@v4

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          projectBaseDir: SAST
          args: >
            -Dsonar.projectKey=Sofl4me_SAST
            -Dsonar.organization=sofl4me
            -Dsonar.sources=app
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"

  dast_zap:
    name: DAST with OWASP ZAP
    runs-on: ubuntu-latest
    needs: build_app
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image for DAST
        run: docker build -t my-vuln-app:latest ./SAST/app

      - name: Run app container
        run: |
          set -e
          docker run -d --rm -p 5000:5000 --name vulnapp my-vuln-app:latest

          # Attendre que l'app réponde ; si le conteneur meurt, afficher les logs et échouer
          for i in {1..60}; do
            if curl -fsS http://localhost:5000 >/dev/null; then
              echo "App is up"
              break
            fi

            if ! docker ps --format '{{.Names}}' | grep -q '^vulnapp$'; then
              echo "Container 'vulnapp' is not running. Showing logs:"
              docker logs vulnapp || true
              exit 1
            fi
            sleep 1
          done

      - name: Run OWASP ZAP baseline scan
        run: |
          mkdir -p reports
          docker run --rm --network host \
            -v ${{ github.workspace }}/reports:/zap/reports \
            ghcr.io/zaproxy/zaproxy:stable \
            /zap/zap-baseline.py \
              -t http://localhost:5000 \
              -r /zap/reports/zap_report.html || true

      - name: Upload ZAP report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: reports/zap_report.html

      - name: Stop app container
        if: always()
        run: docker stop vulnapp || true

  dep_audit:
    name: Dependency Audit (pip-audit)
    runs-on: ubuntu-latest
    needs: build_app
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies & pip-audit
        run: pip install -r SAST/app/requirements.txt pip-audit

      - name: Run pip-audit
        run: pip-audit -r SAST/app/requirements.txt -f json -o pip-audit.json || true

      - name: Upload pip-audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pip-audit
          path: pip-audit.json
